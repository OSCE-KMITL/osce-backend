# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Account {
  created_at: DateTime!
  email: String!
  id: String!
  is_advisor: Advisor
  is_company: CompanyPerson
  is_student: Student
  password: String!
  role: Role!
  status: String!
  updated_at: DateTime!
}

type Advisor {
  account: Account!
  advisor_id: String!
  announcements: [Announcement]!
  created_at: DateTime!
  faculty: String!
  is_committee: Boolean!
  last_name: String!
  name: String!
  updated_at: DateTime!
}

input AdvisorAccountInput {
  email: String!
  faculty: String!
  is_committee: Boolean!
  last_name: String!
  name: String!
  password: String!
}

type Announcement {
  advisor_id: Advisor!
  createdAt: DateTime!
  description: String!
  id: String!
  title: String!
  updatedAt: DateTime!
}

input AnnouncementInput {
  advisor_id: String!
  desc: String!
  title: String!
}

type AuthData {
  created_at: DateTime!
  email: String!
  id: String!
  is_advisor: Advisor
  is_company: CompanyPerson
  is_student: Student
  password: String!
  role: Role!
  status: String!
  token: String!
  updated_at: DateTime!
}

type Company {
  address: String!
  business_type: String!
  company_id: String!
  company_persons: [CompanyPerson]!
  created_at: DateTime!
  name: String!
  phone_number: String!
  updated_at: DateTime!
  website_url: String!
}

input CompanyInput {
  address: String!
  business_type: String!
  name: String!
  phone_number: String!
  website_url: String!
}

type CompanyPerson {
  account: Account!
  company_id: Company!
  company_person_id: String!
  created_at: DateTime!
  full_name: String!
  is_coordinator: Boolean!
  job_title: String!
  updated_at: DateTime!
}

input CompanyPersonInput {
  company_id: String!
  email: String!
  full_name: String!
  is_coordinator: Boolean!
  job_title: String!
  password: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input GetWithKeyInput {
  target: String
  value: String
}

type Mutation {
  createAnnouncement(announcement_info: AnnouncementInput!): Announcement
  createCompany(company_info: CompanyInput!): Company!
  deleteAdvisorAccount(id: String!): Account
  deleteAnnouncement(announcement_id: String!): Announcement
  deleteCompany(delete_by_id: String!): Company
  deleteCompanyPersonAccount(id: String!): Account
  registerAdvisor(advisorAccountInfo: AdvisorAccountInput!): Account!
  registerCompanyPerson(CompanyPersonAccountInfo: CompanyPersonInput!): Account!
  signIn(email: String!, password: String!): AuthData
  studentRegister(student_register_input: StudentRegisterInput!): Account!
  updateAccount(updateInfo: UpdateAdvisorInput!): Advisor!
  updateAnnouncement(update_input: UpdateAnnouncementInput!): Announcement
  updateCompany(update_input: UpdateCompanyInput!): Company
  updateCompanyPerson(update_input: UpdateCompanyPersonInput!): CompanyPerson
}

type Query {
  getAccount(account_id: String!): Account
  getAccounts: [Account]!
  getAdvisorAccount(advisorId: String!): Account
  getAdvisorAccounts: [Account]!
  getAllCompanies: [Company]!
  getAnnouncement(with_key: GetWithKeyInput!): Announcement
  getAnnouncements: [Announcement]!
  getCompanyById(company_id: String!): Company
  getCompanyByKey(with_key: GetWithKeyInput!): Company
  getCompanyPersonAccount(account_id: String!): Account
  getCompanyPersonAccounts: [Account]!
  getMe: Account
}

"""type of user"""
enum Role {
  ADVISOR
  COMMITTEE
  COMPANY
  STUDENT
}

type Student {
  account: Account!
  lastname: String!
  name: String!
  student_id: String!
}

input StudentRegisterInput {
  email: String!
  lastname: String!
  name: String!
  password: String!
  student_id: String!
}

input UpdateAdvisorInput {
  faculty: String!
  id: String
  is_committee: Boolean!
  last_name: String!
  name: String!
}

input UpdateAnnouncementInput {
  desc: String!
  id: String!
  title: String!
}

input UpdateCompanyInput {
  address: String!
  business_type: String!
  id: String!
  name: String!
  phone_number: String!
  website_url: String!
}

input UpdateCompanyPersonInput {
  full_name: String!
  id: String
  is_coordinator: Boolean!
  job_title: String!
}
