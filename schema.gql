# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Account {
  created_at: DateTime!
  email: String!
  id: String!
  is_advisor: Advisor
  is_company: CompanyPerson
  is_student: Student
  password: String!
  profile_image: String
  role: Role!
  status: String!
  updated_at: DateTime!
}

type Advisor {
  account: Account!
  advisor_id: String!
  announcements: [Announcement]!
  created_at: DateTime!
  faculty: String!
  is_committee: Boolean!
  last_name: String!
  name: String!
  updated_at: DateTime!
}

input AdvisorAccountInput {
  email: String!
  faculty: String!
  is_committee: Boolean!
  last_name: String!
  name: String!
  password: String!
}

type Announcement {
  advisor_id: Advisor!
  createdAt: DateTime!
  description: String!
  id: String!
  title: String!
  updatedAt: DateTime!
}

input AnnouncementInput {
  desc: String!
  title: String!
}

type AuthData {
  created_at: DateTime!
  email: String!
  id: String!
  is_advisor: Advisor
  is_company: CompanyPerson
  is_student: Student
  password: String!
  profile_image: String
  role: Role!
  status: String!
  token: String!
  updated_at: DateTime!
}

type Company {
  address: String!
  business_type: String!
  company_persons: [CompanyPerson]!
  created_at: DateTime!
  id: String!
  job: [Job]!
  name: String!
  phone_number: String!
  updated_at: DateTime!
  website_url: String!
}

input CompanyInput {
  address: String!
  business_type: String!
  name: String!
  phone_number: String!
  website_url: String!
}

type CompanyPerson {
  account: Account!
  company_id: Company!
  company_person_id: String!
  created_at: DateTime!
  full_name: String!
  is_coordinator: Boolean!
  job_title: String!
  updated_at: DateTime!
}

input CompanyPersonInput {
  company_id: String!
  email: String!
  full_name: String!
  is_coordinator: Boolean!
  job_title: String!
  password: String!
}

input CoopRegisterArgs {
  address: String
  birth_date: String
  citizen_id: String
  curriculum_id: String
  curriculum_name_en: String
  curriculum_name_th: String
  department_id: String
  department_name_en: String
  department_name_th: String
  driver_license: Boolean
  emer_lastname: String
  emer_name: String
  emer_relation: String
  emer_tel: String
  faculty_id: String
  faculty_name_en: String
  faculty_name_th: String
  gender: String
  gpa: String
  height: String
  lastname_th: String
  level_id: String
  military_status: Boolean
  name_th: String
  phone_number: String
  religion: String
  weight: String
}

"""status of coop applying"""
enum CoopStatus {
  APPLYING
  DEFAULT
  PASSED
  REJECTED
}

type Curriculum {
  curriculum_id: String!
  curriculum_name_en: String!
  curriculum_name_th: String!
  dept_id: String!
  faculty_id: String!
  id: ID!
  level_id: Faculty!
  students: [Student]!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Department {
  department_id: String!
  department_name_en: String!
  department_name_th: String!
  faculty_id: String!
  id: ID!
  students: [Student]!
}

type Faculty {
  faculty_id: ID!
  faculty_name_en: String!
  faculty_name_th: String!
  students: [Student]!
}

input GetWithKeyInput {
  target: String
  value: String
}

type Job {
  company_id: Company
  compensation: String!
  coop301_fileurl: String!
  createdAt: DateTime!
  id: String!
  job_title: String!
  limit: String!
  nature_of_work: String!
  project_topic: String!
  required_major: String!
  required_skills: String!
  updatedAt: DateTime!
  welfare: String!
}

input JobInput {
  company_id: String!
  compensation: String!
  coop301_fileurl: String!
  job_title: String!
  limit: String!
  nature_of_work: String!
  project_topic: String!
  required_major: String!
  required_skills: String!
  welfare: String!
}

input LanguageAbility {
  level: String!
  name: String!
}

type Mutation {
  createAnnouncement(announcement_info: AnnouncementInput!): Announcement
  createCompany(company_info: CompanyInput!): Company
  createJob(job_info: JobInput!): Job
  deleteAdvisorAccount(id: String!): Account
  deleteAnnouncement(announcement_id: String!): Announcement
  deleteCompany(delete_by_id: String!): Company
  deleteCompanyPersonAccount(id: String!): Account
  deleteJob(job_id: String!): Job
  registerAdvisor(advisorAccountInfo: AdvisorAccountInput!): Account!
  registerCompanyPerson(CompanyPersonAccountInfo: CompanyPersonInput!): Account!
  signIn(email: String!, password: String!): AuthData
  studentRegister(student_register_input: StudentRegisterInput!): Account!
  studentRegisterCoop(language_abilities: [LanguageAbility!], register_coop_input: CoopRegisterArgs!, skills: [Skill!]): Student
  updateAccount(updateInfo: UpdateAdvisorInput!): Advisor!
  updateAnnouncement(update_input: UpdateAnnouncementInput!): Announcement
  updateCompany(update_input: UpdateCompanyInput!): Company
  updateCompanyPerson(update_input: UpdateCompanyPersonInput!): CompanyPerson
  updateJob(update_input: UpdateJobInput!): Job
}

type Query {
  getAccount(account_id: String!): Account
  getAccounts: [Account]!
  getAdvisorAccount(advisorId: String!): Account
  getAdvisorAccounts: [Account]!
  getAllCompanies: [Company]!
  getAllJob: [Job]!
  getAnnouncement(with_key: GetWithKeyInput!): Announcement
  getAnnouncements: [Announcement]!
  getCompanyById(company_id: String!): Company
  getCompanyByKey(with_key: GetWithKeyInput!): Company
  getCompanyPersonAccount(account_id: String!): Account
  getCompanyPersonAccounts: [Account]!
  getJobById(job_id: String!): Job
  getMe: Account
  getStudent(student_id: String!): Student
  getStudents: [Student]!
  getStudentsByDepartment(department_id: String!): [Student!]
}

"""type of user"""
enum Role {
  ADVISOR
  COMMITTEE
  COMPANY
  STUDENT
}

input Skill {
  level: String!
  skill_name: String!
}

type Student {
  account: Account!
  address: String
  birth_date: String
  citizen_id: String
  coop_status: CoopStatus!
  created_at: DateTime!
  curriculum: Curriculum
  department: Department
  driver_license: Boolean
  emer_lastname: String
  emer_name: String
  emer_relation: String
  emer_tel: String
  faculty: Faculty
  gender: String
  gpa: String
  height: String
  language_abilities: [StudentLanguageAbility]!
  lastname_eng: String!
  lastname_th: String
  military_status: Boolean
  name_eng: String!
  name_th: String
  phone_number: String
  religion: String
  skills: [StudentSkills]!
  student_id: ID!
  updated_at: DateTime!
  weight: String
}

type StudentLanguageAbility {
  id: ID!
  level: String!
  name: String!
}

input StudentRegisterInput {
  email: String!
  lastname_eng: String!
  name_eng: String!
  password: String!
  student_id: String!
}

type StudentSkills {
  id: ID!
  level: String!
  skill_name: String!
}

input UpdateAdvisorInput {
  faculty: String!
  id: String
  is_committee: Boolean!
  last_name: String!
  name: String!
}

input UpdateAnnouncementInput {
  desc: String!
  id: String!
  title: String!
}

input UpdateCompanyInput {
  address: String!
  business_type: String!
  id: String!
  name: String!
  phone_number: String!
  website_url: String!
}

input UpdateCompanyPersonInput {
  full_name: String!
  id: String
  is_coordinator: Boolean!
  job_title: String!
}

input UpdateJobInput {
  compensation: String!
  coop301_fileurl: String!
  id: String!
  job_title: String!
  limit: String!
  nature_of_work: String!
  project_topic: String!
  required_major: String!
  required_skills: String!
  welfare: String!
}
